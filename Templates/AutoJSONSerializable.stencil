// swiftlint:disable cyclomatic_complexity file_length function_body_length line_length

import Foundation
{% ifnot argument.removePodImport %}
import Sourcery_AutoJSONSerializable
{% endif %}

// MARK: - AutoJSONSerializable for classes, protocols, structs
{% for type in types.all|annotated:"AutoJSONSerializable" %}

// MARK: - {{ type.name }} AutoJSONSerializable
extension {{ type.name }}: JSONSerializable {
{% if type.supertype|annotated:"AutoJSONSerializable" %} THIS WONT COMPILE, WE DONT SUPPORT INHERITANCE for AutoJSONSerializable {% endif %}
    {{ type.accessLevel }} func toJSONObject() -> Any {
        var jsonObject = [String: Any]()
        {% for variable in type.storedVariables %}
        {% ifnot variable.isArray %}
        {% set optionalTrait %}{% if variable.isOptional %}?{%endif%}{% endset %}
        let {{ variable.name }} = self.{{ variable.name }}{% if variable.type|annotated:"AutoJSONSerializable" or variable.type.implements.JSONSerializable %}{{ optionalTrait }}.toJSONObject(){% else %}{% if variable.type.kind == "enum" and variable.type.rawTypeName %}{{ optionalTrait }}.rawValue{%endif%}{% endif %}
        {% else %}
        {% set optionalTrait %}{% if variable.typeName.array.elementTypeName.isOptional %}?{%endif%}{% endset %}
        let {{ variable.name }} = self.{{ variable.name }}.map { $0{% if variable.typeName.array.elementType|annotated:"AutoJSONSerializable" or variable.typeName.array.elementType.implements.JSONSerializable %}.toJSONObject(){% else %}{% if variable.typeName.array.elementType.kind == "enum" and variable.typeName.array.elementType.rawTypeName %}{{ optionalTrait }}.rawValue{% endif %}{%endif%} }
        {% endif %}
        jsonObject["{{ variable.annotations.JSONKey|default:variable.name }}"] = {{ variable.name }}
        {% endfor %}
        return jsonObject
    }
}
{% endfor %}

// MARK: -
